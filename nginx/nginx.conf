events {
    worker_connections 1024;
}

http {
    # 上游服务器配置
    upstream indextts_backend {
        # 负载均衡算法：轮询
        server indextts-api-1:6008 max_fails=3 fail_timeout=30s;
        server indextts-api-2:6008 max_fails=3 fail_timeout=30s;
        server indextts-api-3:6008 max_fails=3 fail_timeout=30s;
        
        # 可选：使用其他负载均衡算法
        # least_conn;  # 最少连接
        # ip_hash;     # IP哈希
    }

    # 限制请求大小
    client_max_body_size 100M;
    
    # 超时设置
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 300s;  # TTS请求可能需要较长时间

    # Gzip压缩
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'upstream="$upstream_addr"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=tts:10m rate=2r/s;

    # 健康检查端点
    server {
        listen 80;
        server_name _;

        # 健康检查
        location /health {
            proxy_pass http://indextts_backend/health;
            access_log off;
        }

        # 负载均衡状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # API文档
        location /docs {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://indextts_backend/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redoc {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://indextts_backend/redoc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # TTS API - 主要端点
        location /tts {
            limit_req zone=tts burst=5 nodelay;
            proxy_pass http://indextts_backend/tts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 特殊处理音频流
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # 静态文件（如果有）
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 默认路由
        location / {
            return 301 /docs;
        }
    }

    # HTTPS配置（可选）
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL配置
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # 其他配置与HTTP相同...
    # }
}

